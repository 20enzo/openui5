{"version":3,"file":"chunk-04be579f.js","sources":["../../../../../../../../../ui5-webcomponents/packages/base/dist/Device.js"],"sourcesContent":["/**\n * Device and Feature Detection API: Provides information about the used browser / device and cross platform support for certain events\n * like media queries, orientation change or resizing.\n *\n * This API is independent from any other part of the UI5 framework. This allows it to be loaded beforehand, if it is needed, to create the UI5 bootstrap\n * dynamically depending on the capabilities of the browser or device.\n *\n * @namespace\n * @name Device\n */\n\nconst Device = {};\n\n//* ******* OS Detection ********\n\n/**\n * Contains information about the operating system of the Device.\n * @name Device.os\n */\n\n/**\n * Enumeration containing the names of known operating systems.\n * @name Device.os.OS\n */\n\n/**\n * The name of the operating system.\n * @name Device.os.name\n * @type String\n */\n\n/**\n * The version of the operating system as <code>string</code>. Might be empty if no version can be determined.\n * @name Device.os.versionStr\n * @type String\n */\n\n/**\n * The version of the operating system as <code>float</code>. Might be <code>-1</code> if no version can be determined.\n * @name Device.os.version\n * @type float\n */\n\n/**\n * If this flag is set to <code>true</code>, a Windows operating system is used.\n * @name Device.os.windows\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, a Mac operating system is used.\n * @name Device.os.macintosh\n * @type boolean\n */\n\n/*\n * If this flag is set to <code>true</code>, an iOS operating system is used.\n * @name Device.os.ios\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, an Android operating system is used.\n * @name Device.os.android\n * @type boolean\n */\n\n/*\n * Windows operating system name.\n * @see Device.os.name\n * @name Device.os.OS.WINDOWS\n */\n\n/**\n * MAC operating system name.\n * @see Device.os.name\n * @name Device.os.OS.MACINTOSH\n */\n\n/**\n * iOS operating system name.\n * @see Device.os.name\n * @name Device.os.OS.IOS\n */\n\n/**\n * Android operating system name.\n * @see Device.os.name\n * @name Device.os.OS.ANDROID\n */\n\nconst OS = {\n\t\"WINDOWS\": \"win\",\n\t\"MACINTOSH\": \"mac\",\n\t\"IOS\": \"iOS\",\n\t\"ANDROID\": \"Android\",\n};\n\nconst _getMobileOS = () => {\n\tconst userAgent = navigator.userAgent;\n\n\tlet rPlatform, // regular expression for platform\n\t\taMatches;\n\n\t// iOS, Android\n\trPlatform = /\\(([a-zA-Z ]+);\\s(?:[U]?[;]?)([\\D]+)((?:[\\d._]*))(?:.*[)][^\\d]*)([\\d.]*)\\s/;\n\taMatches = userAgent.match(rPlatform);\n\n\tif (aMatches) {\n\t\tconst rAppleDevices = /iPhone|iPad|iPod/;\n\n\t\tif (aMatches[0].match(rAppleDevices)) {\n\t\t\taMatches[3] = aMatches[3].replace(/_/g, \".\");\n\n\t\t\treturn ({\n\t\t\t\t\"name\": OS.IOS,\n\t\t\t\t\"versionStr\": aMatches[3],\n\t\t\t});\n\t\t}\n\n\t\tif (aMatches[2].match(/Android/)) {\n\t\t\taMatches[2] = aMatches[2].replace(/\\s/g, \"\");\n\t\t\treturn ({\n\t\t\t\t\"name\": OS.ANDROID,\n\t\t\t\t\"versionStr\": aMatches[3],\n\t\t\t});\n\t\t}\n\t}\n\n\t// Firefox on Android\n\trPlatform = /\\((Android)[\\s]?([\\d][.\\d]*)?;.*Firefox\\/[\\d][.\\d]*/;\n\taMatches = userAgent.match(rPlatform);\n\tif (aMatches) {\n\t\treturn ({\n\t\t\t\"name\": OS.ANDROID,\n\t\t\t\"versionStr\": aMatches.length === 3 ? aMatches[2] : \"\",\n\t\t});\n\t}\n};\n\nconst _getDesktopOS = () => {\n\tconst sPlatform = navigator.platform;\n\tif (sPlatform.indexOf(\"Win\") !== -1) {\n\t\tconst rVersion = /Windows NT (\\d+).(\\d)/i; // userAgent since windows 10: Windows NT 10[...]\n\t\tconst uaResult = navigator.userAgent.match(rVersion);\n\n\t\treturn {\n\t\t\t\"name\": OS.WINDOWS,\n\t\t\t\"versionStr\": uaResult[1],\n\t\t};\n\t}\n\n\tif (sPlatform.indexOf(\"Mac\") !== -1) {\n\t\treturn {\n\t\t\t\"name\": OS.MACINTOSH,\n\t\t\t\"versionStr\": \"\",\n\t\t};\n\t}\n\n\treturn null;\n};\n\nconst _getOS = () => {\n\treturn _getMobileOS() || _getDesktopOS();\n};\n\nconst _setOS = () => {\n\tif (Device.os) {\n\t\treturn;\n\t}\n\n\tDevice.os = _getOS() || {};\n\tDevice.os.OS = OS;\n\tDevice.os.version = Device.os.versionStr ? parseFloat(Device.os.versionStr) : -1;\n\n\tif (Device.os.name) {\n\t\tObject.keys(OS).forEach(name => {\n\t\t\tif (OS[name] === Device.os.name) {\n\t\t\t\tDevice.os[name.toLowerCase()] = true;\n\t\t\t}\n\t\t});\n\t}\n};\n\nconst getOS = () => {\n\tif (!Device.os) {\n\t\t_setOS();\n\t}\n\n\treturn Device.os;\n};\n\nconst isAndroid = () => {\n\tif (!Device.os) {\n\t\t_setOS();\n\t}\n\n\treturn !!Device.os.android;\n};\n\n//* ******* Browser Detection ********\n\n/**\n * Contains information about the used browser.\n * @name Device.browser\n */\n\n/**\n * Enumeration containing the names of known browsers.\n * @name Device.browser.BROWSER\n *\n * The name of the browser.\n * @name Device.browser.name\n * @type String\n */\n\n/**\n * The version of the browser as <code>string</code>. Might be empty if no version can be determined.\n * @name Device.browser.versionStr\n * @type String\n */\n\n/**\n * The version of the browser as <code>float</code>. Might be <code>-1</code> if no version can be determined.\n * @name Device.browser.version\n * @type float\n */\n\n/**\n * If this flag is set to <code>true</code>, the mobile variant of the browser is used or\n * a tablet or phone device is detected. This information might not be available for all browsers.\n * @name Device.browser.mobile\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, the Microsoft Internet Explorer browser is used.\n * @name Device.browser.internet_explorer\n * @type boolean\n * @deprecated since 1.20, use {@link Device.browser.msie} instead.\n */\n\n/**\n * If this flag is set to <code>true</code>, the Microsoft Internet Explorer browser is used.\n * @name Device.browser.msie\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, the Microsoft Edge browser is used.\n * @name Device.browser.edge\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, the Mozilla Firefox browser is used.\n * @name Device.browser.firefox\n */\n\n/**\n * If this flag is set to <code>true</code>, the Google Chrome browser is used.\n * @name Device.browser.chrome\n * @type boolean\n *\n * If this flag is set to <code>true</code>, the Apple Safari browser is used.\n *\n * <b>Note:</b>\n * This flag is also <code>true</code> when the standalone (fullscreen) mode or webview is used on iOS devices.\n * Please also note the flags {@link Device.browser.fullscreen} and {@link Device.browser.webview}.\n *\n * @name Device.browser.safari\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, a browser featuring a Webkit engine is used.\n *\n * <b>Note:</b>\n * This flag is also <code>true</code> when the used browser was based on the Webkit engine, but\n * uses another rendering engine in the meantime. For example the Chrome browser started from version 28 and above\n * uses the Blink rendering engine.\n *\n * @name Device.browser.webkit\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, the Safari browser runs in standalone fullscreen mode on iOS.\n *\n * <b>Note:</b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected,\n * technically not a standard Safari is used. There might be slight differences in behavior and detection, e.g.\n * the availability of {@link Device.browser.version}.\n *\n * @name Device.browser.fullscreen\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, the Safari browser runs in webview mode on iOS.\n *\n * <b>Note:</b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected,\n * technically not a standard Safari is used. There might be slight differences in behavior and detection, e.g.\n * the availability of {@link Device.browser.version}.\n *\n * @name Device.browser.webview\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, the Phantom JS browser is used.\n * @name Device.browser.phantomJS\n * @type boolean\n */\n\n/**\n * The version of the used Webkit engine, if available.\n * @name Device.browser.webkitVersion\n * @type String\n */\n\n/**\n * If this flag is set to <code>true</code>, a browser featuring a Mozilla engine is used.\n * @name Device.browser.mozilla\n * @type boolean\n */\n\n/**\n * Internet Explorer browser name.\n * @name Device.browser.BROWSER.INTERNET_EXPLORER\n */\n\n/**\n * Edge browser name.\n * @name Device.browser.BROWSER.EDGE\n */\n\n/**\n * Firefox browser name.\n * @name Device.browser.BROWSER.FIREFOX\n */\n\n/**\n * Chrome browser name.\n * @name Device.browser.BROWSER.CHROME\n */\n\n/**\n * Safari browser name.\n * @name Device.browser.BROWSER.SAFARI\n */\n\n/**\n * Android stock browser name.\n * @name Device.browser.BROWSER.ANDROID\n */\n\nconst BROWSER = {\n\t\"INTERNET_EXPLORER\": \"ie\",\n\t\"EDGE\": \"ed\",\n\t\"FIREFOX\": \"ff\",\n\t\"CHROME\": \"cr\",\n\t\"SAFARI\": \"sf\",\n\t\"ANDROID\": \"an\",\n};\n\n/*!\n* Taken from jQuery JavaScript Library v1.7.1\n* http://jquery.com/\n*\n* Copyright 2011, John Resig\n* Dual licensed under the MIT or GPL Version 2 licenses.\n* http://jquery.org/license\n*\n* Includes Sizzle.js\n* http://sizzlejs.com/\n* Copyright 2011, The Dojo Foundation\n* Released under the MIT, BSD, and GPL Licenses.\n*\n* Date: Mon Nov 21 21:11:03 2011 -0500\n*/\nconst _calcBrowser = () => {\n\tconst sUserAgent = navigator.userAgent.toLowerCase();\n\n\tconst rwebkit = /(webkit)[ /]([\\w.]+)/;\n\tconst rmsie = /(msie) ([\\w.]+)/;\n\tconst rmsie11 = /(trident)\\/[\\w.]+;.*rv:([\\w.]+)/;\n\tconst redge = /(edge)[ /]([\\w.]+)/;\n\tconst rmozilla = /(mozilla)(?:.*? rv:([\\w.]+))?/;\n\n\t// WinPhone IE11 and MS Edge userAgents contain \"WebKit\" and \"Mozilla\" and therefore must be checked first\n\tconst browserMatch = redge.exec(sUserAgent)\n\t\t|| rmsie11.exec(sUserAgent)\n\t\t|| rwebkit.exec(sUserAgent)\n\t\t|| rmsie.exec(sUserAgent)\n\t\t|| (sUserAgent.indexOf(\"compatible\") < 0 && rmozilla.exec(sUserAgent)) || [];\n\n\tconst oRes = {\n\t\tbrowser: browserMatch[1] || \"\",\n\t\tversion: browserMatch[2] || \"0\",\n\t};\n\toRes[oRes.browser] = true;\n\treturn oRes;\n};\n\nconst _getBrowser = () => {\n\tconst oBrowser = _calcBrowser();\n\tconst sUserAgent = navigator.userAgent;\n\tconst oNavigator = window.navigator;\n\n\t// jQuery checks for user agent strings. We differentiate between browsers\n\tlet oExpMobile;\n\tlet oResult;\n\tlet fVersion;\n\n\t// Mozilla\n\tif (oBrowser.mozilla) {\n\t\toExpMobile = /Mobile/;\n\t\tif (sUserAgent.match(/Firefox\\/(\\d+\\.\\d+)/)) {\n\t\t\tfVersion = parseFloat(RegExp.$1);\n\t\t\toResult = {\n\t\t\t\tname: BROWSER.FIREFOX,\n\t\t\t\tversionStr: `${fVersion}`,\n\t\t\t\tversion: fVersion,\n\t\t\t\tmozilla: true,\n\t\t\t\tmobile: oExpMobile.test(sUserAgent),\n\t\t\t};\n\t\t} else {\n\t\t\t// unknown mozilla browser\n\t\t\toResult = {\n\t\t\t\tmobile: oExpMobile.test(sUserAgent),\n\t\t\t\tmozilla: true,\n\t\t\t\tversion: -1,\n\t\t\t};\n\t\t}\n\t} else if (oBrowser.webkit) {\n\t\t// webkit version is needed for calculation if the mobile android device is a tablet (calculation of other mobile devices work without)\n\t\tconst regExpWebkitVersion = sUserAgent.toLowerCase().match(/webkit[/]([\\d.]+)/);\n\t\tlet webkitVersion;\n\t\tif (regExpWebkitVersion) {\n\t\t\twebkitVersion = regExpWebkitVersion[1];\n\t\t}\n\t\toExpMobile = /Mobile/;\n\t\tconst aChromeMatch = sUserAgent.match(/(Chrome|CriOS)\\/(\\d+\\.\\d+).\\d+/);\n\t\tconst aFirefoxMatch = sUserAgent.match(/FxiOS\\/(\\d+\\.\\d+)/);\n\t\tconst aAndroidMatch = sUserAgent.match(/Android .+ Version\\/(\\d+\\.\\d+)/);\n\n\t\tif (aChromeMatch || aFirefoxMatch || aAndroidMatch) {\n\t\t\tlet sName,\n\t\t\t\tsVersion,\n\t\t\t\tbMobile;\n\n\t\t\tif (aChromeMatch) {\n\t\t\t\tsName = BROWSER.CHROME;\n\t\t\t\tbMobile = oExpMobile.test(sUserAgent);\n\t\t\t\tsVersion = parseFloat(aChromeMatch[2]);\n\t\t\t} else if (aFirefoxMatch) {\n\t\t\t\tsName = BROWSER.FIREFOX;\n\t\t\t\tbMobile = true;\n\t\t\t\tsVersion = parseFloat(aFirefoxMatch[1]);\n\t\t\t} else if (aAndroidMatch) {\n\t\t\t\tsName = BROWSER.ANDROID;\n\t\t\t\tbMobile = oExpMobile.test(sUserAgent);\n\t\t\t\tsVersion = parseFloat(aAndroidMatch[1]);\n\t\t\t}\n\n\t\t\toResult = {\n\t\t\t\tname: sName,\n\t\t\t\tmobile: bMobile,\n\t\t\t\tversionStr: `${sVersion}`,\n\t\t\t\tversion: sVersion,\n\t\t\t\twebkit: true,\n\t\t\t\twebkitVersion,\n\t\t\t};\n\t\t} else { // Safari might have an issue with sUserAgent.match(...); thus changing\n\t\t\tconst oExp = /(Version|PhantomJS)\\/(\\d+\\.\\d+).*Safari/;\n\t\t\tconst bStandalone = oNavigator.standalone;\n\t\t\tif (oExp.test(sUserAgent)) {\n\t\t\t\tconst aParts = oExp.exec(sUserAgent);\n\t\t\t\tfVersion = parseFloat(aParts[2]);\n\t\t\t\toResult = {\n\t\t\t\t\tname: BROWSER.SAFARI,\n\t\t\t\t\tversionStr: `${fVersion}`,\n\t\t\t\t\tfullscreen: false,\n\t\t\t\t\twebview: false,\n\t\t\t\t\tversion: fVersion,\n\t\t\t\t\tmobile: oExpMobile.test(sUserAgent),\n\t\t\t\t\twebkit: true,\n\t\t\t\t\twebkitVersion,\n\t\t\t\t\tphantomJS: aParts[1] === \"PhantomJS\",\n\t\t\t\t};\n\t\t\t} else if (/iPhone|iPad|iPod/.test(sUserAgent) && !(/CriOS/.test(sUserAgent)) && !(/FxiOS/.test(sUserAgent)) && (bStandalone === true || bStandalone === false)) {\n\t\t\t\t// WebView or Standalone mode on iOS\n\t\t\t\toResult = {\n\t\t\t\t\tname: BROWSER.SAFARI,\n\t\t\t\t\tversion: -1,\n\t\t\t\t\tfullscreen: bStandalone,\n\t\t\t\t\twebview: !bStandalone,\n\t\t\t\t\tmobile: oExpMobile.test(sUserAgent),\n\t\t\t\t\twebkit: true,\n\t\t\t\t\twebkitVersion,\n\t\t\t\t};\n\t\t\t} else { // other webkit based browser\n\t\t\t\toResult = {\n\t\t\t\t\tmobile: oExpMobile.test(sUserAgent),\n\t\t\t\t\twebkit: true,\n\t\t\t\t\twebkitVersion,\n\t\t\t\t\tversion: -1,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t} else if (oBrowser.msie || oBrowser.trident) {\n\t\tfVersion = parseFloat(oBrowser.version);\n\n\t\toResult = {\n\t\t\tname: BROWSER.INTERNET_EXPLORER,\n\t\t\tversionStr: `${fVersion}`,\n\t\t\tversion: fVersion,\n\t\t\tmsie: true,\n\t\t\tmobile: false,\n\t\t};\n\t} else if (oBrowser.edge) {\n\t\tfVersion = parseFloat(oBrowser.version);\n\t\toResult = {\n\t\t\tname: BROWSER.EDGE,\n\t\t\tversionStr: `${fVersion}`,\n\t\t\tversion: fVersion,\n\t\t\tedge: true,\n\t\t};\n\t} else {\n\t\toResult = {\n\t\t\tname: \"\",\n\t\t\tversionStr: \"\",\n\t\t\tversion: -1,\n\t\t\tmobile: false,\n\t\t};\n\t}\n\n\treturn oResult;\n};\n\nconst _setBrowser = () => {\n\tDevice.browser = _getBrowser();\n\tDevice.browser.BROWSER = BROWSER;\n\n\tif (Device.browser.name) {\n\t\tObject.keys(BROWSER).forEach(b => {\n\t\t\tif (BROWSER[b] === Device.browser.name) {\n\t\t\t\tDevice.browser[b.toLowerCase()] = true;\n\t\t\t}\n\t\t});\n\t}\n};\n\nconst getBrowser = () => {\n\tif (!Device.browser) {\n\t\t_setBrowser();\n\t}\n\treturn Device.browser;\n};\n\nconst isIE = () => {\n\tif (!Device.browser) {\n\t\t_setBrowser();\n\t}\n\treturn !!Device.browser.msie;\n};\n\nconst isEdge = () => {\n\tif (!Device.browser) {\n\t\t_setBrowser();\n\t}\n\treturn !!Device.browser.edge;\n};\n\nconst isChrome = () => {\n\tif (!Device.browser) {\n\t\t_setBrowser();\n\t}\n\treturn !!Device.browser.chrome;\n};\n\nconst isFF = () => {\n\tif (!Device.browser) {\n\t\t_setBrowser();\n\t}\n\treturn !!Device.browser.firefox;\n};\n\nconst isSafari = () => {\n\tif (!Device.browser) {\n\t\t_setBrowser();\n\t}\n\treturn !!Device.browser.safari;\n};\n\n//* ******* Support Detection ********\n\nconst _setSupport = () => {\n\tif (Device.support) {\n\t\treturn;\n\t}\n\n\tif (!Device.browser) {\n\t\t_setBrowser();\n\t}\n\n\tDevice.support = {};\n\tDevice.support.touch = !!((\"ontouchstart\" in window) || (navigator.maxTouchPoints > 0) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n};\n\nconst supportTouch = () => {\n\tif (!Device.support) {\n\t\t_setSupport();\n\t}\n\n\treturn !!Device.support.touch;\n};\n\n//* ******* System Detection ********\n\n/**\n * Provides a basic categorization of the used device based on various indicators.\n *\n * <b>Note:</b> Depending on the capabilities of the device it is also possible that multiple flags are set to <code>true</code>.\n *\n * @namespace\n * @name Device.system\n */\n\n/**\n * If this flag is set to <code>true</code>, the device is recognized as a tablet.\n *\n * <b>Note:</b> This flag is also true for some browsers on desktop devices running on Windows 8 or higher.\n * Also see the documentation for {@link Device.system.combi} devices.\n * You can use the following logic to ensure that the current device is a tablet device:\n *\n * <pre>\n * if(Device.system.tablet && !Device.system.desktop){\n *\t...tablet related commands...\n * }\n * </pre>\n *\n * @name Device.system.tablet\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, the device is recognized as a phone.\n *\n * @name Device.system.phone\n * @type boolean\n */\n\n/**\n * If this flag is set to <code>true</code>, the device is recognized as a desktop system.\n *\n * @name Device.system.desktop\n * @type boolean\n */\n\n/**\n * Indicates if the device is recognized as a combination of a desktop system and tablet.\n *\n * <b>Note:</b> This property is mainly for Microsoft Windows 8 (and following) devices where the mouse and touch event may be supported\n * natively by the browser being used. This property is set to <code>true</code> only when both mouse and touch event are natively supported.\n *\n * @name Device.system.combi\n * @type boolean\n */\n\n/**\n * @name Device.system.SYSTEMTYPE\n * Enumeration containing the names of known types of the devices.\n */\n\nconst SYSTEMTYPE = {\n\t\"TABLET\": \"tablet\",\n\t\"PHONE\": \"phone\",\n\t\"DESKTOP\": \"desktop\",\n\t\"COMBI\": \"combi\",\n};\n\nconst _isTablet = () => {\n\tconst sUserAgent = navigator.userAgent;\n\tif (Device.os.name === Device.os.OS.IOS) {\n\t\treturn /ipad/i.test(sUserAgent);\n\t}\n\t// in real mobile device\n\tif (supportTouch()) {\n\t\tif (Device.os.windows && Device.os.version >= 8) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Device.browser.chrome && Device.os.android && Device.os.version >= 4.4) {\n\t\t\t// From Android version 4.4, WebView also uses Chrome as Kernel.\n\t\t\t// We can use the user agent pattern defined in Chrome to do phone/tablet detection\n\t\t\t// According to the information here: https://developer.chrome.com/multidevice/user-agent#chrome_for_android_user_agent,\n\t\t\t//  the existence of \"Mobile\" indicates it's a phone. But because the crosswalk framework which is used in Fiori Client\n\t\t\t//  inserts another \"Mobile\" to the user agent for both tablet and phone, we need to check whether \"Mobile Safari/<Webkit Rev>\" exists.\n\t\t\treturn !/Mobile Safari\\/[.0-9]+/.test(sUserAgent);\n\t\t}\n\t\tlet densityFactor = window.devicePixelRatio ? window.devicePixelRatio : 1; // may be undefined in Windows Phone devices\n\t\t// On Android sometimes window.screen.width returns the logical CSS pixels, sometimes the physical device pixels;\n\t\t// Tests on multiple devices suggest this depends on the Webkit version.\n\t\t// The Webkit patch which changed the behavior was done here: https://bugs.webkit.org/show_bug.cgi?id=106460\n\t\t// Chrome 27 with Webkit 537.36 returns the logical pixels,\n\t\t// Chrome 18 with Webkit 535.19 returns the physical pixels.\n\t\t// The BlackBerry 10 browser with Webkit 537.10+ returns the physical pixels.\n\t\t// So it appears like somewhere above Webkit 537.10 we do not hve to divide by the devicePixelRatio anymore.\n\t\tif (Device.os.android && Device.browser.webkit && (parseFloat(Device.browser.webkitVersion) > 537.10)) {\n\t\t\tdensityFactor = 1;\n\t\t}\n\n\t\t// this is how android distinguishes between tablet and phone\n\t\t// http://android-developers.blogspot.de/2011/07/new-tools-for-managing-screen-sizes.html\n\t\tconst bTablet = (Math.min(window.screen.width / densityFactor, window.screen.height / densityFactor) >= 600);\n\n\t\t// special workaround for Nexus 7 where the window.screen.width is 600px or 601px in portrait mode (=> tablet)\n\t\t// but window.screen.height 552px in landscape mode (=> phone), because the browser UI takes some space on top.\n\t\t// So the detected device type depends on the orientation :-(\n\t\t// actually this is a Chrome bug, as \"width\"/\"height\" should return the entire screen's dimensions and\n\t\t// \"availWidth\"/\"availHeight\" should return the size available after subtracting the browser UI\n\n\t\t/*\n\t\t\t\tif (isLandscape() &&\n\t\t\t\t\t(window.screen.height === 552 || window.screen.height === 553) // old/new Nexus 7\n\t\t\t\t\t&&\n\t\t\t\t\t(/Nexus 7/i.test(sUserAgent))) {\n\t\t\t\t\tbTablet = true;\n\t\t\t\t}\n\t\t\t\t*/\n\n\t\treturn bTablet;\n\t}\n\t// This simple android phone detection can be used here because this is the mobile emulation mode in desktop browser\n\tconst bAndroidPhone = (/(?=android)(?=.*mobile)/i.test(sUserAgent));\n\t// in desktop browser, it's detected as tablet when\n\t// 1. Windows 8 device with a touch screen where \"Touch\" is contained in the userAgent\n\t// 2. Android emulation and it's not an Android phone\n\treturn (Device.browser.msie && sUserAgent.indexOf(\"Touch\") !== -1) || (Device.os.android && !bAndroidPhone);\n};\n\nconst _getSystem = () => {\n\tconst bTabletDetected = _isTablet();\n\tconst isWin8Upwards = Device.os.windows && Device.os.version >= 8;\n\n\tconst oSystem = {};\n\toSystem.tablet = !!((Device.support.touch || isWin8Upwards) && bTabletDetected);\n\toSystem.phone = !!((Device.os.windows_phone || (Device.support.touch)) && !bTabletDetected);\n\toSystem.desktop = !!((!oSystem.tablet && !oSystem.phone) || isWin8Upwards);\n\toSystem.combi = oSystem.desktop && oSystem.tablet;\n\toSystem.SYSTEMTYPE = SYSTEMTYPE;\n\n\treturn oSystem;\n};\n\nconst _setSystem = () => {\n\t_setSupport();\n\t_setOS();\n\n\tDevice.system = {};\n\tDevice.system = _getSystem();\n\tif (Device.system.tablet || Device.system.phone) {\n\t\tDevice.browser.mobile = true;\n\t}\n};\n\nconst getSystem = () => {\n\tif (!Device.system) {\n\t\t_setSystem();\n\t}\n\n\treturn Device.system;\n};\n\nconst isDesktop = () => {\n\tif (!Device.system) {\n\t\t_setSystem();\n\t}\n\n\treturn Device.system.desktop;\n};\n\nconst isTablet = () => {\n\tif (!Device.system) {\n\t\t_setSystem();\n\t}\n\n\treturn Device.system.tablet;\n};\n\nconst isPhone = () => {\n\tif (!Device.system) {\n\t\t_setSystem();\n\t}\n\n\treturn Device.system.phone;\n};\n\nconst isMobile = () => {\n\tif (!Device.system) {\n\t\t_setSystem();\n\t}\n\n\treturn Device.browser.mobile;\n};\n\nexport {\n\tisIE,\n\tisEdge,\n\tisChrome,\n\tisFF,\n\tisSafari,\n\tisMobile,\n\tisDesktop,\n\tisTablet,\n\tisPhone,\n\tisAndroid,\n\tgetOS,\n\tgetSystem,\n\tgetBrowser,\n\tsupportTouch,\n};\n"],"names":["Device","OS","_getMobileOS","userAgent","navigator","rPlatform","aMatches","match","rAppleDevices","replace","IOS","ANDROID","length","_getDesktopOS","sPlatform","platform","indexOf","rVersion","uaResult","WINDOWS","MACINTOSH","_getOS","_setOS","os","version","versionStr","parseFloat","name","Object","keys","forEach","toLowerCase","BROWSER","_calcBrowser","sUserAgent","rwebkit","rmsie","rmsie11","redge","rmozilla","browserMatch","exec","oRes","browser","_getBrowser","oBrowser","oNavigator","window","oExpMobile","oResult","fVersion","mozilla","RegExp","$1","FIREFOX","mobile","test","webkit","regExpWebkitVersion","webkitVersion","aChromeMatch","aFirefoxMatch","aAndroidMatch","sName","sVersion","bMobile","CHROME","oExp","bStandalone","standalone","aParts","SAFARI","fullscreen","webview","phantomJS","msie","trident","INTERNET_EXPLORER","edge","EDGE","_setBrowser","b","isIE","isSafari","safari","_setSupport","support","touch","maxTouchPoints","DocumentTouch","document","supportTouch","SYSTEMTYPE","_isTablet","windows","chrome","android","densityFactor","devicePixelRatio","bTablet","Math","min","screen","width","height","bAndroidPhone","_getSystem","bTabletDetected","isWin8Upwards","oSystem","tablet","phone","windows_phone","desktop","combi","_setSystem","system","isDesktop","isPhone"],"mappings":"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"}